(function(d){var c=window.AmazonUIPageJS||window.P,f=c._namespace||c.attributeErrors,b=f?f("ARARegisterTrigger",""):c;b.guardFatal?b.guardFatal(d)(b,window):b.execute(function(){d(b,window)})})(function(d,c,f){d.now("ARAConfiguration").execute(function(b){b||d.register("ARAConfiguration",function(){return{getRoboticSessionId:function(){return"000-0000000-0000000"},getUserAgent:function(){return navigator.userAgent}}})});"use strict";d.now("ARAAddMetric").execute(function(b){b||d.register("ARAAddMetric",
function(){return{addMetric:function(a,e){c.ue&&c.ue.count&&c.ue.count(a,e)}}})});"use strict";d.now("ARALogError").execute(function(b){b||d.register("ARALogError",function(){return{logError:function(a){var e={logLevel:2<arguments.length&&arguments[2]!==f?arguments[2]:"ERROR",attribution:"ARARegisterTrigger",message:1<arguments.length&&arguments[1]!==f?arguments[1]:""};c.ueLogError&&c.ueLogError(a,e);return[a,e]}}})});"use strict";d.now("ARAUtils").execute(function(b){b||d.register("ARAUtils",function(){function a(){return c.opts}
var e=/development|beta/,b=/pre-prod|gamma/,h={"Google Chrome":106};return{getWindowOpts:a,getHref:function(){return c.location.href},getStage:function(a){return e.test(a)?"beta":b.test(a)?"gamma":"prod"},getCustomerId:function(){return a().customerId},getSessionId:function(){return a().sessionId},getNavigator:function(){return navigator},registerFetch:function(a){return c.fetch(a,{keepalive:!0,attributionReporting:{eventSourceEligible:!1,triggerEligible:!0}})},checkIsBrowserSupported:function(){var a=
navigator.userAgentData;if(null==a)return!1;a=a.brands;a:{if(a&&0!==a.length){var e=!0,b=!1,d=f;try{for(var c=a[Symbol.iterator](),g;!(e=(g=c.next()).done);e=!0){var m=g.value;if(Number.parseFloat(m.version)>=h[m.brand]){var n=!0;break a}}}catch(r){b=!0,d=r}finally{try{!e&&c.return&&c.return()}finally{if(b)throw d;}}}n=!1}return n},checkIsFeatureAllowed:function(){return"featurePolicy"in document&&"function"===typeof document.featurePolicy.allowsFeature?document.featurePolicy.allowsFeature("attribution-reporting"):
!1},getDetailPageState:function(){if(c.DetailPage&&c.DetailPage.StateController)return c.DetailPage.StateController.getState()}}})});"use strict";d.now("ARARegisterTriggerHelpers").execute(function(b){b||d.when("ARAConfiguration","ARAAddMetric","ARALogError","ARAUtils").register("ARARegisterTriggerHelpers",function(a,e,b,d){function c(a){switch(a){case "beta":return"https://beta-ara.paa-reporting-advertising.amazon";case "gamma":return"https://gamma-ara.paa-reporting-advertising.amazon";case "prod":return"https://ara.paa-reporting-advertising.amazon"}}
function g(a,c,h,k){return d.registerFetch(a).then(function(b){if(c<h)return b.ok?(e.addMetric("ARA:RegisterDPVResponseRecieved",1),b.json()):new Promise(function(b,e){setTimeout(function(){g(a,c+1,h,2*k).then(b).catch(e)},k)});throw Error("Exceeded maximum retries");}).catch(function(a){e.addMetric("ARA:RegisterDPVResponseError",1);b.logError(a,"ARA:RegisterDPVResponseError. Error receiving response from ARAService")})}return{generateGatewayUrl:c,browserSupportsARA:function(){var a=!0,b=d.checkIsBrowserSupported();
b||e.addMetric("ARA:UserAgentNotSupported",1);var c=d.checkIsFeatureAllowed();c||e.addMetric("ARA:ARAFeatureNotEnabled",1);b&&c||(a=!1);return a},registerTrigger:g,createQueryParams:function(a,b){b=c(b)+"/conversion?";var e={asin:a.pageInformation.asin,eventType:"dpv",debugKey:a.identity.customerId,marketId:1,requestId:a.identity.requestId},d=encodeURIComponent;a=Object.keys(e).map(function(a){return d(a)+"\x3d"+d(e[a])}).join("\x26");return b+a}}})});"use strict";d.now("DetailedPageInfo").execute(function(b){b||
(d.register("DetailedPageInfo",function(){var a={init:function(b,c,d,f,l){a.config=b;a.helpers=f;a.utils=l;a.metrics=c;a.errors=d;b=a.config.getRoboticSessionId();(c=a.utils.getHref())?(c=a.utils.getStage(c),a.retrieveDPV(c,b)):(a.metrics.addMetric("ARA:PageLoadError",1),a.errors.logError({message:"ARA:PageLoadError. Error retrieving url from window."}))},retrieveDPV:function(b,c){if(a.helpers.browserSupportsARA()){a.metrics.addMetric("ARA:BrowserSupportsARA:True",1);var d=a.utils.getWindowOpts();
if(d){var e=a.utils.getSessionId(),f=d.pageType,g=a.utils.getCustomerId(),p=d.obfuscatedMarketId,q=d.asin,k=a.utils.getHref();d=d.requestId;(c=e===c)?a.metrics.addMetric("ARA:TotalPunts",1):(b=a.helpers.createQueryParams({identity:{sessionId:e,customerId:g,requestId:d},pageInformation:{pageURL:k,pageType:f,asin:q,obfuscatedMarketId:p}},b),a.helpers.registerTrigger(b,0,5,100),a.metrics.addMetric("ARA:BrowserSupportsARA:DPV",1));c&&a.metrics.addMetric("ARA:RoboticTraffic:True",1)}else a.metrics.addMetric("ARA:OptsNotFoundError",
1),a.errors.logError({message:"ARA:OptsNotFoundError. Error getting windowOpts."})}else a.metrics.addMetric("ARA:BrowserSupportsARA:False",1)}};return a}),d.when("ARAConfiguration","ARAAddMetric","ARALogError","ARARegisterTriggerHelpers","ARAUtils","DetailedPageInfo","ready").execute(function(a,b,c,d,f,l){l.init(a,b,c,d,f)}))})});